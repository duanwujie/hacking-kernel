/\*
 \*		64-bit Kernel's Virtual memory layout. (assuming 64 bit app)
 \*							+-----------------------+
 \*							|	psm 1-1 map			|
 \*							|	exec args area		|
 \* 0xFFFFFFFF.FFC00000  	|-----------------------|- ARGSBASE
 \*							|	   debugger    		|
 \* 0xFFFFFFFF.FF800000  	|-----------------------|- SEGDEBUGBASE
 \*							|      unused    		|
 \*							+-----------------------+
 \*							|      Kernel Data		|
 \* 0xFFFFFFFF.FBC00000  	|-----------------------|
 \*							|      Kernel Text		|
 \* 0xFFFFFFFF.FB800000  	|-----------------------|- KERNEL_TEXT
 \* 						|     LUFS sinkhole		|
 \* 0xFFFFFFFF.FB000000    -|-----------------------|- lufs_addr
 \* ---                  	|-----------------------|- valloc_base + valloc_sz
 \* 						|   early pp structures	|
 \* 						|   memsegs, memlists, 	|
 \* 						|   page hash, etc.		|
 \* ---                  	|-----------------------|- valloc_base
 \* 						|     ptable_va    		|
 \* ---                  	|-----------------------|- ptable_va
 \* 						|      Core heap		| (used for loadable modules)
 \* 0xFFFFFFFF.C0000000  	|-----------------------|- core_base / ekernelheap
 \*							|	 Kernel				|
 \*							|	  heap				|
 \* 0xFFFFFXXX.XXX00000  	|-----------------------|- kernelheap (floating)
 \*							|	 segkmap			|
 \* 0xFFFFFXXX.XXX00000     |-----------------------|- segkmap_start (floating)
 \*							|    device mappings	|
 \* 0xFFFFFXXX.XXX00000  	|-----------------------|- toxic_addr (floating)
 \*							|	  segkp				|
 \* ---                  	|-----------------------|- segkp_base
 \*							|	 segkpm				|
 \* 0xFFFFFE00.00000000  	|-----------------------|
 \*							|	Red Zone			|
 \* 0xFFFFFD80.00000000  	|-----------------------|- KERNELBASE
 \*							|     User stack		|- User space memory
 \* 						|			|
 \* 						| shared objects, etc	|	(grows downwards)
 \*							:			:
 \* 						|			|
 \* 0xFFFF8000.00000000  	|-----------------------|
 \* 						|			|
 \* 						| VA Hole / unused		|
 \* 						|			|
 \* 0x00008000.00000000  	|-----------------------|
 \*							|			|
 \*							|			|
 \*							:			:
 \*							|	user heap			|	(grows upwards)
 \*							|			|
 \*							|	user data			|
 \*							|-----------------------|
 \*							|	user text			|
 \* 0x00000000.04000000  	|-----------------------|
 \*							|	invalid		        |
 \* 0x00000000.00000000		+-----------------------+
 \*/
 
 
 http://lxr.linux.no/linux+v4.3.3/arch/x86/include/asm/pgtable_64_types.h
 http://lxr.linux.no/linux+v4.3.3/arch/x86/include/asm/page_32_types.h#L18
 /* See Documentation/x86/x86_64/mm.txt for a description of the memory map. */
 
 
 
 
 
 
 
# 0000000000000000 - 00007fffffffffff (=47 bits) user space, different per mm
# hole caused by [48:63] sign extension
ffff800000000000 - ffff87ffffffffff (=43 bits) guard hole, reserved for hypervisor
ffff880000000000 - ffffc7ffffffffff (=64 TB) direct mapping of all phys. memory
ffffc80000000000 - ffffc8ffffffffff (=40 bits) hole
ffffc90000000000 - ffffe8ffffffffff (=45 bits) vmalloc/ioremap space
ffffe90000000000 - ffffe9ffffffffff (=40 bits) hole
ffffea0000000000 - ffffeaffffffffff (=40 bits) virtual memory map (1TB)
... unused hole ...
ffffec0000000000 - fffffc0000000000 (=44 bits) kasan shadow memory (16TB)
... unused hole ...
ffffff0000000000 - ffffff7fffffffff (=39 bits) %esp fixup stacks
... unused hole ...
ffffffff80000000 - ffffffffa0000000 (=512 MB)  kernel text mapping, from phys 0
ffffffffa0000000 - ffffffffff5fffff (=1525 MB) module mapping space
ffffffffff600000 - ffffffffffdfffff (=8 MB) vsyscalls
ffffffffffe00000 - ffffffffffffffff (=2 MB) unused hole

 
#define __START_KERNEL_map	_AC(0xffffffff80000000, UL)
 
 
#define MAXMEM           _AC(__AC(1, UL) << MAX_PHYSMEM_BITS, UL)
#define VMALLOC_START    _AC(0xffffc90000000000, UL)
#define VMALLOC_END      _AC(0xffffe8ffffffffff, UL)
#define VMEMMAP_START    _AC(0xffffea0000000000, UL)
#define MODULES_VADDR    (__START_KERNEL_map + KERNEL_IMAGE_SIZE)
#define MODULES_END      _AC(0xffffffffff000000, UL)
#define MODULES_LEN   (MODULES_END - MODULES_VADDR)
#define ESPFIX_PGD_ENTRY _AC(-2, UL)
#define ESPFIX_BASE_ADDR (ESPFIX_PGD_ENTRY << PGDIR_SHIFT)
#define EFI_VA_START     ( -4 * (_AC(1, UL) << 30))
#define EFI_VA_END       (-68 * (_AC(1, UL) << 30))

#define EARLY_DYNAMIC_PAGE_TABLES       64





	64-bit Kernel's Virtual memory layout.
	
0xffffffffffffffff   ---+-----------------------+----------------------------------------------- 
						|      					|			
						|						|  (=2 MB) unused hole
						|      					|
0xffffffffffe00000   ---|-----------------------|----------------------------------------------- 
						|
	8M					|      					|   vsyscalls
0xffffffffff600000   ---|-----------------------|----------------------------------------------- 
						|     					| 
	1525M				|                       |   module mapping space
						|						|
0xffffffffa0000000   ---|-----------------------|----------------------------------------------- 
						|   					|   
	512M    			|						|   kernel text mapping, from phys 0
						|						|
0xffffffff80000000	 ---|-----------------------|----------------------------------------------- 
						|   					|   unused hole 
0xffffff8000000000	 ---|-----------------------|-----------------------------------------------
						|       				|   %esp fixup stacks
0xffffff0000000000   ---|-----------------------|-----------------------------------------------
						|    					|   unused hole
0xfffffc0000000000   ---|-----------------------|-----------------------------------------------
						|					    |
						|	  			        |   kasan shadow memory (16TB)
0xffffec0000000000 	----|-----------------------|-----------------------------------------------
						|	 			        |   unused hole
0xffffeb0000000000  ----|-----------------------|----------------------------------------------
						|   					|
						|						|	virtual memory map (1TB)
						|						|
0xffffea0000000000  ----|-----------------------|----------------------------------------------
						|						|	hole
0xffffe90000000000  ----|-----------------------|----------------------------------------------
						|						|
	(32T)				|						|   vmalloc/ioremap space
						|						|	
0xffffc90000000000  ----|-----------------------|----------------------------------------------
						|						|
					    |						|   hole
0xffffc80000000000  ----|-----------------------|----------------------------------------------
						|     					| 
						|						|
	(64T)				|						|  direct mapping of all phys. memory
						|						|   
0xffff880000000000	----|-----------------------|----------------------------------------------
						:			:			|   
	(8T)				|						|  guard hole, reserved for hypervisor
						|			|			|
0xffff800000000000  ----|-----------------------|----------------------------------------------
						|						|
					    | 		 hole	    	|  hole caused by [48:63] sign extension
						|						|
0x0000800000000000	----|-----------------------|----------------------------------------------
						|						|
						|						|
						|			:			|
	(128T)				|				        |		
						|						|
						|				        |
						|                       |  user space, different per mm
						|			            |
  	                    |                       |
						|		                |
0x0000000000000000	----+-----------------------+----------------------------------------------
 
 
1.页表挂载，页表结构
2.do_fork实现:页表权限,
3.缺页中断cow

 

